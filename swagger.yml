openapi: 3.0.0
info:
  title: "RP Flask REST API"
  description: "An API about people and notes"
  version: "1.0.0"

servers:
  - url: "/api"

components:  # components are building blocks in our OpenAPI specification
  schemas:  # component block with schemas for a single person
    Person:  # data model
      type: "object"  # data type of schema
      required:  # required properties
        - lname  # the '-' indicates, a list of properties are contained in 'required'
      properties:  # property that define as 'required' must also exist in 'properties'
        fname:  # first name of a person
          type: "string"
        lname:  # last name of a person
          type: "string"
  parameters:
    lname:
      name: "lname"
      description: "Last name of the person to get"
      in: path
      required: True
      schema:
        type: "string"

paths:
  /people:
    get:
      operationId: "people.read_all"  #function for respond to the request
      tags:  #to group the operations in the UI
        - "People"
      summary: "Read the list of people"  #UI display text
      responses:
        "200":
          description: "Successfully read people list"
    post:
      operationId: "people.create"
      tags:
        - People
      summary: "Create a person"
      requestBody:
          description: "Person to create"
          required: True
          content:
            application/json:  # data exchange format of our API
              schema:
                x-body-name: "person"
                $ref: "#/components/schemas/Person"  # referencing the 'Person' that defined earlier
      responses:
        "201":  # http status code for success response for creation of new resource
          description: "Successfully created person"
  /people/{lname}:  # {lname} substring is a placeholder for the last name which we have to pass in as a URL parameter
    get:
      operationId: "people.read_one"  # points to a read_one() function in people.py
      tags:
        - People
      summary: "Read one person"
      parameters:
        - $ref: "#/components/parameters/lname"
      responses:
        "200":
          description: "Successfully read person"
    put:
      tags:
        - People
      operationId: "people.update"  # call update() function in people.py
      summary: "Update a person"
      parameters:
        - $ref: "#/components/parameters/lname"
      responses:
        "200":
          description: "Successfully updated person"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "person"
              $ref: "#/components/schemas/Person"
    delete:
      tags:
        - People
      operationId: "people.delete"  # call delete() function in people.py
      summary: "Delete a person"
      parameters:
        - $ref: "#/components/parameters/lname"
      responses:
        "204":
          description: "Successfully deleted person"
